# =================================================================
# ユニットテスト用 Docker Compose ファイル
# 軽量で高速な単体テストを実行するための環境
# =================================================================
version: '3.8'

services:
  # ユニットテスト実行環境（モック使用、高速）
  adf-unit-test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adf-unit-test
    environment:
      - TEST_MODE=unit
      - PYTEST_MARKERS=unit
      - PYTHONPATH=/app
      - TEST_TIMEOUT=120
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
      - ./input:/app/input
      - ./output:/app/output
      - unit_test_results:/app/test_results
    working_dir: /app
    networks:
      - unit-test-network
    command: >
      sh -c "
        echo '🚀 ユニットテストを開始します...' &&
        python -m pytest tests/unit/ -v --tb=short --cov=src --cov-report=term-missing --cov-report=html:test_results/coverage_html --junit-xml=test_results/unit_test_results.xml
      "

  # Azure Blob Storage エミュレータ（軽量版、ユニットテスト用）
  azurite-unit:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: azurite-unit-test
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
    ports:
      - "10100:10000" # ユニットテスト用ポート
    volumes:
      - azurite_unit_data:/data
    command: [ "azurite", "--blobHost", "0.0.0.0", "--location", "/data", "--debug", "/data/debug.log" ]
    networks:
      - unit-test-network
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 10000 || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # E2E/Unitテスト用 SQL Server コンテナ（Synapse代替）
  sqlserver-unit:
    build:
      context: .
      dockerfile: Dockerfile.sqltools
      args:
        HTTP_PROXY: ${HTTP_PROXY:-}
        HTTPS_PROXY: ${HTTPS_PROXY:-}
        NO_PROXY: ${NO_PROXY:-}
    container_name: sqlserver-unit-test
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd123
      - MSSQL_PID=Express
      - MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_unit_data:/var/opt/mssql
      - ./arm_template_split/src/sql:/docker-entrypoint-initdb.d   # ODS DDL 自動実行用マウント
    networks:
      - unit-test-network
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd123' -Q 'SELECT 1'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # DDL 自動適用サービス
  sqlserver-init:
    image: mcr.microsoft.com/mssql-tools:latest
    container_name: sqlserver-init
    depends_on:
      sqlserver-unit:
        condition: service_healthy
    volumes:
      - ./arm_template_split/src/sql:/sql
    networks:
      - unit-test-network
    command: ["/opt/mssql-tools/bin/sqlcmd","-S","sqlserver-unit,1433","-U","sa","-P","YourStrong!Passw0rd123","-i","/sql/03_create_ods_tables.sql"]
    restart: "no"

networks:
  unit-test-network:
    driver: bridge

volumes:
  unit_test_results:
    driver: local
  azurite_unit_data:
    driver: local
  sqlserver_unit_data:
    driver: local
