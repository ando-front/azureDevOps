services:
  # SQL Server 2022 for E2E testing
  sqlserver-test:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-e2e-test
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd123
      - MSSQL_PID=Express
      - MSSQL_COLLATION=Japanese_CI_AS
    ports:
      - "11433:1433"
    volumes:
      - ./docker/sql/init:/docker-entrypoint-initdb.d
      - sqlserver_test_data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd123' -Q 'SELECT 1' -C" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - e2e-network

  # Azurite for Azure Storage emulation
  azurite-test:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: azurite-e2e-test
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
    ports:
      - "10000:10000" # Blob service
      - "10001:10001" # Queue service
      - "10002:10002" # Table service
    volumes:
      - azurite_test_data:/data
    command: [ "azurite", "--blobHost", "0.0.0.0", "--queueHost", "0.0.0.0", "--tableHost", "0.0.0.0", "--location", "/data", "--debug", "/data/debug.log" ]
    networks:
      - e2e-network

  # Integration Runtime Simulator
  ir-simulator:
    build:
      context: ./docker/ir-simulator
      dockerfile: Dockerfile
    container_name: ir-simulator-e2e
    environment:
      - SQL_SERVER_HOST=sqlserver-test
      - SQL_SERVER_PORT=1433
      - SQL_SERVER_USER=sa
      - SQL_SERVER_PASSWORD=YourStrong!Passw0rd123
      - AZURITE_HOST=azurite-test
      - AZURITE_PORT=10000
    ports:
      - "8080:8080"
    depends_on:
      sqlserver-test:
        condition: service_healthy
      azurite-test:
        condition: service_started
    volumes:
      - ./docker/ir-simulator/config:/app/config
      - ./tests/data:/app/test_data
    networks:
      - e2e-network

  # E2E Test Runner
  e2e-test-runner:
    build:
      context: .
      dockerfile: docker/test-runner/Dockerfile
    container_name: e2e-test-runner
    environment:
      - SQL_SERVER_HOST=sqlserver-test
      - SQL_SERVER_PORT=1433
      - SQL_SERVER_USER=sa
      - SQL_SERVER_PASSWORD=YourStrong!Passw0rd123
      - SQL_SERVER_DATABASE=TGMATestDB
      - AZURITE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite-test:10000/devstoreaccount1;
      - IR_SIMULATOR_URL=http://ir-simulator:8080
      - TEST_MODE=docker_e2e
      - PYTEST_MARKERS=e2e
      - PYTHONPATH=/app
    depends_on:
      sqlserver-test:
        condition: service_healthy
      azurite-test:
        condition: service_started
      ir-simulator:
        condition: service_started
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
      - ./input:/app/input
      - ./output:/app/output
      - ./docker/test-runner/config:/app/config
      - test_results:/app/test_results
    working_dir: /app
    networks:
      - e2e-network
    profiles:
      - test

networks:
  e2e-network:
    driver: bridge

volumes:
  sqlserver_test_data:
  azurite_test_data:
  test_results:
