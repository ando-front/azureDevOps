{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "factoryName": {
      "type": "string",
      "metadata": "データ ファクトリ名",
      "defaultValue": "omni-df-dev"
    },
    "li_dam_dwh_connectionString": {
      "type": "secureString",
      "metadata": "'li_dam_dwh' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_blob_tgomnidevrgsa_container_connectionString": {
      "type": "secureString",
      "metadata": "'li_blob_tgomnidevrgsa_container' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_Karte_AmazonS3_secretAccessKey": {
      "type": "secureString",
      "metadata": "'li_Karte_AmazonS3' の 'secretAccessKey' のセキュリティで保護された文字列"
    },
    "li_blob_tgomni_container_connectionString": {
      "type": "secureString",
      "metadata": "'li_blob_tgomni_container' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_sqlmi_dwh2_connectionString": {
      "type": "secureString",
      "metadata": "'li_sqlmi_dwh2' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_sftp_password": {
      "type": "secureString",
      "metadata": "'li_sftp' の 'password' のセキュリティで保護された文字列"
    },
    "AzureSqlDatabase1_connectionString": {
      "type": "secureString",
      "metadata": "'AzureSqlDatabase1' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_ftp_test_password": {
      "type": "secureString",
      "metadata": "'li_ftp_test' の 'password' のセキュリティで保護された文字列"
    },
    "li_blob_tgomnidevrgsa_container_shir_connectionString": {
      "type": "secureString",
      "metadata": "'li_blob_tgomnidevrgsa_container_shir' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_dam_dwh_shir_connectionString": {
      "type": "secureString",
      "metadata": "'li_dam_dwh_shir' の 'connectionString' のセキュリティで保護された文字列"
    },
    "li_blob_damhdinsight_container_sasUri": {
      "type": "secureString",
      "metadata": "'li_blob_damhdinsight_container' の 'sasUri' のセキュリティで保護された文字列"
    },
    "li_Karte_AmazonS3_properties_typeProperties_accessKeyId": {
      "type": "string",
      "defaultValue": "AKIASLGERJSDMDR3YKGF"
    },
    "li_sftp_properties_typeProperties_host": {
      "type": "string",
      "defaultValue": "mclj7jp741mk97tnrhl441zv7dy0.ftp.marketingcloudops.com"
    },
    "li_sftp_properties_typeProperties_userName": {
      "type": "string",
      "defaultValue": "534003419_2"
    },
    "li_ftp_test_properties_typeProperties_host": {
      "type": "string",
      "defaultValue": "mclj7jp741mk97tnrhl441zv7dy0.ftp.marketingcloudops.com"
    },
    "li_ftp_test_properties_typeProperties_userName": {
      "type": "string",
      "defaultValue": "534003419_2"
    },
    "li_dam_kv_omni_properties_typeProperties_baseUrl": {
      "type": "string",
      "defaultValue": "https://tgomnidevkey03.vault.azure.net/"
    },
    "li_blob_damhdinsight_container_akv_properties_typeProperties_sasUri_secretName": {
      "type": "string",
      "defaultValue": "0001damdevrgsa-damhdinsight-container"
    },
    "li_blob_mytokyogas_container_sasUri": {
      "type": "secureString",
      "metadata": "'li_blob_mytokyogas_container' の 'sasUri' のセキュリティで保護された文字列"
    },
    "li_blob_tgomnidevrgsa_container_properties_privateLinkResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/25370ec0-e2ac-4a3c-b242-3772024988b2/resourceGroups/0001-tgomni-dev-rg/providers/Microsoft.Storage/storageAccounts/0001tgomnidevrgsa"
    },
    "li_blob_tgomnidevrgsa_container_properties_groupId": {
      "type": "string",
      "defaultValue": "blob"
    },
    "li_blob_tgomnidevrgsa_container_properties_fqdns": {
      "type": "array",
      "defaultValue": [
        "0001tgomnidevrgsa.blob.core.windows.net"
      ]
    },
    "AzureSynapseAnalytics-dam-dev_properties_privateLinkResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/25370ec0-e2ac-4a3c-b242-3772024988b2/resourceGroups/0001-dam-dev-rg/providers/Microsoft.Sql/servers/damd-dwh"
    },
    "AzureSynapseAnalytics-dam-dev_properties_groupId": {
      "type": "string",
      "defaultValue": "sqlServer"
    },
    "AzureSynapseAnalytics-dam-dev_properties_fqdns": {
      "type": "array",
      "defaultValue": [
        "damd-dwh.database.windows.net"
      ]
    },
    "omni-df-dev_AzureBlobStorage-dam-dev_properties_privateLinkResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/25370ec0-e2ac-4a3c-b242-3772024988b2/resourceGroups/0001-dam-dev-rg/providers/Microsoft.Storage/storageAccounts/0001damdevrgsa"
    },
    "omni-df-dev_AzureBlobStorage-dam-dev_properties_groupId": {
      "type": "string",
      "defaultValue": "blob"
    },
    "AzureSqlMI-dev_properties_privateLinkResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/43d95da1-ff6f-49ae-868b-a427c8bb161e/resourceGroups/dam2-rg-dev/providers/Microsoft.Sql/managedInstances/dam2-sqlmi-dev"
    },
    "AzureSqlMI-dev_properties_groupId": {
      "type": "string",
      "defaultValue": "managedInstance"
    },
    "AzureSqlMI-dev_properties_fqdns": {
      "type": "array",
      "defaultValue": [
        "dam2-sqlmi-dev.6b9b3938f4f4.database.windows.net"
      ]
    },
    "tgomnidevkey03-dev_properties_privateLinkResourceId": {
      "type": "string",
      "defaultValue": "/subscriptions/25370ec0-e2ac-4a3c-b242-3772024988b2/resourceGroups/0001-tgomni-dev-rg/providers/Microsoft.KeyVault/vaults/tgomnidevkey03"
    },
    "tgomnidevkey03-dev_properties_groupId": {
      "type": "string",
      "defaultValue": "vault"
    },
    "tgomnidevkey03-dev_properties_fqdns": {
      "type": "array",
      "defaultValue": [
        "tgomnidevkey03.vault.azure.net"
      ]
    }
  },
  "variables": {
    "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
  },
  "resources": [
    {
      "name": "[concat(parameters('factoryName'), '/DoUntilPipeline_copy1')]",
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "properties": {
        "activities": [
          {
            "name": "Until1",
            "type": "Until",
            "dependsOn": [],
            "userProperties": [],
            "typeProperties": {
              "expression": {
                "value": "@or(greater(variables('countRecords'),0),greater(variables('countLoop'),5))",
                "type": "Expression"
              },
              "activities": [
                {
                  "name": "Lookup1",
                  "type": "Lookup",
                  "dependsOn": [],
                  "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                  },
                  "userProperties": [],
                  "typeProperties": {
                    "source": {
                      "type": "SqlDWSource",
                      "sqlReaderQuery": {
                        "value": "SELECT\n    COUNT(*) as count0\nFROM [omni].[omni_odｍ_mytginfo_trn_mtgmst_under_contract_flagx]    -->>[omni_odｍ_mytginfo_trn_mtgmaster_under_contract_flag] -- mTG会員_契約中フラグ\nWHERE REC_REG_YMD=format(CONVERT(DATE, GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'Tokyo Standard Time'),'yyyyMMdd')\n;\n",
                        "type": "Expression"
                      },
                      "queryTimeout": "02:00:00",
                      "partitionOption": "None"
                    },
                    "dataset": {
                      "referenceName": "ds_DamDwhTable",
                      "type": "DatasetReference",
                      "parameters": {
                        "table": "omni_odｍ_mytginfo_trn_mtgmst_under_contract_flagx"
                      }
                    }
                  }
                },
                {
                  "name": "set_countRecords",
                  "type": "SetVariable",
                  "dependsOn": [
                    {
                      "activity": "Lookup1",
                      "dependencyConditions": [
                        "Succeeded"
                      ]
                    }
                  ],
                  "policy": {
                    "secureOutput": false,
                    "secureInput": false
                  },
                  "userProperties": [],
                  "typeProperties": {
                    "variableName": "countRecords",
                    "value": {
                      "value": "@activity('Lookup1').output.firstRow.count0",
                      "type": "Expression"
                    }
                  }
                },
                {
                  "name": "set_countLoop",
                  "type": "SetVariable",
                  "dependsOn": [
                    {
                      "activity": "increment_countLoop",
                      "dependencyConditions": [
                        "Succeeded"
                      ]
                    }
                  ],
                  "policy": {
                    "secureOutput": false,
                    "secureInput": false
                  },
                  "userProperties": [],
                  "typeProperties": {
                    "variableName": "countLoop",
                    "value": {
                      "value": "@variables('temp')",
                      "type": "Expression"
                    }
                  }
                },
                {
                  "name": "increment_countLoop",
                  "type": "SetVariable",
                  "dependsOn": [
                    {
                      "activity": "set_countRecords",
                      "dependencyConditions": [
                        "Succeeded"
                      ]
                    }
                  ],
                  "policy": {
                    "secureOutput": false,
                    "secureInput": false
                  },
                  "userProperties": [],
                  "typeProperties": {
                    "variableName": "temp",
                    "value": {
                      "value": "@add(variables('countLoop'), 1)",
                      "type": "Expression"
                    }
                  }
                }
              ],
              "timeout": "0.12:00:00"
            }
          }
        ],
        "policy": {
          "elapsedTimeMetric": {}
        },
        "variables": {
          "countRecords": {
            "type": "Integer",
            "defaultValue": 0
          },
          "countLoop": {
            "type": "Integer",
            "defaultValue": 0
          },
          "temp": {
            "type": "Integer",
            "defaultValue": 0
          }
        },
        "folder": {
          "name": "IT"
        },
        "annotations": [],
        "lastPublishTime": "2025-02-12T08:19:47Z"
      },
      "dependsOn": [
        "[concat(variables('factoryId'), '/datasets/ds_DamDwhTable')]"
      ]
    }
  ]
}